{"version":3,"file":"ascii-engine.esm.js","sources":["../src/constants.ts","../src/events.ts","../src/renderer.ts","../src/demo/cube.ts","../src/demo/static.ts","../src/demo/cube-input.ts"],"sourcesContent":["export enum Resolution {\n  Low = 1,\n  MediumLow = 2,\n  Medium = 3,\n  MediumHigh = 4,\n  High = 5,\n  VeryHigh = 6,\n  Ultra = 7,\n  UltraHigh = 8,\n  Extreme = 9,\n  Maximum = 10,\n}\n\nexport const Nbsp = '\\u00A0';\nexport const ScaleFactor = 0.05;\n","import { bootElements, calculateCellMetrics } from './renderer';\nimport { AnimationContext, CursorContext, RenderOptions } from './types';\n\nexport const addPointerEvents = (\n  target: HTMLElement,\n  context: AnimationContext,\n  cursor: CursorContext,\n) => {\n  const bbox = target.getBoundingClientRect();\n  target.addEventListener('pointermove', (e: Event) => {\n    if (!(e instanceof PointerEvent)) return;\n    cursor.x = e.x - bbox.left;\n    cursor.y = e.y - bbox.top;\n\n    cursor.col = Math.floor(cursor.x / context.cellWidth);\n    cursor.row = Math.floor(cursor.y / context.cellHeight);\n  });\n\n  target.addEventListener('pointerdown', (e: Event) => {\n    if (!(e instanceof PointerEvent)) return;\n    cursor.pressed = true;\n  });\n\n  target.addEventListener('pointerup', (e: Event) => {\n    if (!(e instanceof PointerEvent)) return;\n    cursor.pressed = false;\n  });\n};\n\nexport const addWindowEvents = (\n  target: HTMLElement,\n  context: AnimationContext,\n  options: RenderOptions,\n) => {\n  window.addEventListener('resize', () => {\n    const updatedCellMetrics = calculateCellMetrics(target, options.resolution);\n    context.rows = updatedCellMetrics.rows;\n    context.cols = updatedCellMetrics.cols;\n    context.cellWidth = updatedCellMetrics.cellWidth;\n    context.cellHeight = updatedCellMetrics.cellHeight;\n    bootElements(target, context);\n  });\n};\n","import { Resolution, Nbsp, ScaleFactor } from './constants';\nimport { addPointerEvents, addWindowEvents } from './events';\nimport {\n  Animation,\n  AnimationContext,\n  CellMetrics,\n  CursorContext,\n  FrameBuffer,\n  RenderOptions,\n} from './types';\n\nconst createBaseSpanElement = () => {\n  const span = document.createElement('span');\n  span.style.display = 'block';\n  span.style.fontFamily = 'monospace';\n  span.style.userSelect = 'none';\n  span.style.overflow = 'hidden';\n\n  span.innerHTML = Nbsp;\n\n  return span;\n};\n\nconst createSpanElement = (context: AnimationContext) => {\n  const { cellHeight } = context;\n\n  const span = createBaseSpanElement();\n\n  span.style.height = `${cellHeight}px`;\n  span.style.fontSize = `${cellHeight}px`;\n  span.style.lineHeight = `${cellHeight}px`;\n  span.innerHTML = Nbsp;\n\n  return span;\n};\n\nexport const calculateCellMetrics = (\n  target: HTMLElement,\n  resolution: Resolution,\n): CellMetrics => {\n  const { height: targetHeight, width: targetWidth } =\n    target.getBoundingClientRect();\n\n  const tempEl = createBaseSpanElement();\n\n  tempEl.style.visibility = 'hidden';\n  tempEl.style.display = 'inline';\n  tempEl.innerHTML = Nbsp;\n  target.appendChild(tempEl);\n\n  const { height: baseHeight } = tempEl.getBoundingClientRect();\n  target.removeChild(tempEl);\n\n  const scale = resolution * ScaleFactor;\n\n  const cellHeight = Math.floor(baseHeight / scale);\n  const cellWidth = cellHeight * 0.6;\n\n  const rows =\n    (targetHeight > 0 ? Math.floor(targetHeight / cellHeight) : 0) + 1; // +1 to prevent empty row at the bottom\n  const cols = (targetWidth > 0 ? Math.floor(targetWidth / cellWidth) : 0) + 1;\n\n  return {\n    rows,\n    cols,\n    cellHeight,\n    cellWidth,\n  };\n};\n\nconst bootCursor = (\n  target: HTMLElement,\n  context: AnimationContext,\n): CursorContext => {\n  const cursor: CursorContext = {\n    x: 0,\n    y: 0,\n    col: 0,\n    row: 0,\n    pressed: false,\n  };\n\n  addPointerEvents(target, context, cursor);\n\n  return cursor;\n};\n\nexport const bootElements = (\n  target: HTMLElement,\n  context: AnimationContext,\n) => {\n  // Reset target content\n  target.innerHTML = '';\n\n  for (let i = 0; i < context.rows; i++) {\n    target.appendChild(createSpanElement(context));\n  }\n};\n\nconst bootContext = (target: HTMLElement, options: RenderOptions) => {\n  const cellMetrics = calculateCellMetrics(target, options.resolution);\n\n  const context: AnimationContext = {\n    rows: cellMetrics.rows,\n    cols: cellMetrics.cols,\n    cellWidth: cellMetrics.cellWidth,\n    cellHeight: cellMetrics.cellHeight,\n    frame: 0,\n    deltaTime: 0,\n    elapsedTime: 0,\n    options,\n  };\n\n  addWindowEvents(target, context, options);\n\n  return context;\n};\n\nconst getRowElement = (target: HTMLElement, row: number) => {\n  return target.children[row] as HTMLSpanElement;\n};\n\nconst processFrameBuffer = (\n  target: HTMLElement,\n  context: AnimationContext,\n  frameBuffer: FrameBuffer,\n) => {\n  for (let i = 0; i < context.rows; i++) {\n    const rowElement = getRowElement(target, i);\n    if (!rowElement) continue;\n\n    const rowContent: string[] = [];\n    frameBuffer[i].forEach((char, j) => {\n      rowContent[j] = char;\n    });\n\n    rowElement.innerHTML = rowContent.join('');\n  }\n};\n\nconst runAnimationLoop = (\n  target: HTMLElement,\n  context: AnimationContext,\n  animation: Animation,\n  cursor: CursorContext,\n) => {\n  let previousTimestamp = 0;\n  const frameBuffer: FrameBuffer = [];\n\n  function loop(timestamp: number) {\n    context.deltaTime = (timestamp - previousTimestamp) / 1000;\n    context.elapsedTime += context.deltaTime;\n    previousTimestamp = timestamp;\n\n    for (let i = 0; i < context.rows; i++) {\n      if (!frameBuffer[i]) {\n        frameBuffer[i] = Array(context.cols).fill(null);\n      }\n    }\n\n    for (let i = 0; i < context.rows; i++) {\n      for (let j = 0; j < context.cols; j++) {\n        const coords = { x: j, y: i };\n        const char = animation(coords, context, frameBuffer, cursor);\n\n        frameBuffer[i][j] = !char || char === ' ' ? Nbsp : char;\n      }\n    }\n\n    processFrameBuffer(target, context, [...frameBuffer]);\n    frameBuffer.length = 0;\n    context.frame++;\n\n    requestAnimationFrame(loop);\n  }\n  requestAnimationFrame(loop);\n};\n\nexport const render = (\n  target: HTMLElement | null,\n  animation: Animation,\n  options: RenderOptions = {\n    resolution: Resolution.Maximum,\n  },\n): void => {\n  if (!target) throw new Error('Target element cannot be null');\n\n  const context = bootContext(target, options);\n\n  bootElements(target, context);\n  const cursor = bootCursor(target, context);\n\n  runAnimationLoop(target, context, animation, cursor);\n};\n","/*\n * This demo was created with the help of ChatGPT 4o\n */\n\nimport { AnimationContext, FrameBuffer, Animation } from '../types';\n\n// Projection constants and rotation speed\nconst FOV = 300; // Field of view for perspective\nconst DISTANCE = 45; // Distance of the cube from the viewer\n\n// Define cube vertices and edges\nconst cubeVertices = [\n  { x: -1, y: -1, z: -1 },\n  { x: 1, y: -1, z: -1 },\n  { x: 1, y: 1, z: -1 },\n  { x: -1, y: 1, z: -1 },\n  { x: -1, y: -1, z: 1 },\n  { x: 1, y: -1, z: 1 },\n  { x: 1, y: 1, z: 1 },\n  { x: -1, y: 1, z: 1 },\n];\n\n// Edges defining cube connections between vertices\nconst edges = [\n  [0, 1],\n  [1, 2],\n  [2, 3],\n  [3, 0], // Back face\n  [4, 5],\n  [5, 6],\n  [6, 7],\n  [7, 4], // Front face\n  [0, 4],\n  [1, 5],\n  [2, 6],\n  [3, 7], // Connecting edges\n];\n\n// Rotate point on X-axis\nconst rotateX = (point: { x: number; y: number; z: number }, angle: number) => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return {\n    x: point.x,\n    y: point.y * cos - point.z * sin,\n    z: point.y * sin + point.z * cos,\n  };\n};\n\n// Rotate point on Y-axis\nconst rotateY = (point: { x: number; y: number; z: number }, angle: number) => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return {\n    x: point.x * cos + point.z * sin,\n    y: point.y,\n    z: -point.x * sin + point.z * cos,\n  };\n};\n\n// Project 3D points to 2D screen\nconst project = (\n  point: { x: number; y: number; z: number },\n  context: AnimationContext,\n) => {\n  const scale = FOV / (point.z + DISTANCE); // Perspective projection\n  const screenX = Math.round(point.x * scale + context.cols / 2);\n  const screenY = Math.round(point.y * scale + context.rows / 2);\n  return { x: screenX, y: screenY };\n};\n\n// Draw a line between two points using Bresenham's algorithm\nconst drawLine = (\n  buffer: FrameBuffer,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n) => {\n  const dx = Math.abs(x2 - x1);\n  const dy = Math.abs(y2 - y1);\n  const sx = x1 < x2 ? 1 : -1;\n  const sy = y1 < y2 ? 1 : -1;\n  let err = dx - dy;\n\n  while (true) {\n    if (x1 >= 0 && x1 < buffer[0].length && y1 >= 0 && y1 < buffer.length) {\n      buffer[y1][x1] = '*'; // Draw a point on the line\n    }\n    if (x1 === x2 && y1 === y2) break;\n    const e2 = 2 * err;\n    if (e2 > -dy) {\n      err -= dy;\n      x1 += sx;\n    }\n    if (e2 < dx) {\n      err += dx;\n      y1 += sy;\n    }\n  }\n};\n\n// Main function to render the rotating cube\nexport const Cube: Animation = (coord, context, buffer, _) => {\n  // Define rotation angles based on elapsed time for continuous rotation\n  const angle = context.elapsedTime * 0.5;\n\n  // Rotate and project each vertex\n  const projectedVertices = cubeVertices.map((v) => {\n    const rotatedVertex = rotateX(rotateY(v, angle), angle); // Rotate around Y and X\n    return project(rotatedVertex, context);\n  });\n\n  // Draw each edge on the buffer\n  edges.forEach(([start, end]) => {\n    const { x: x1, y: y1 } = projectedVertices[start];\n    const { x: x2, y: y2 } = projectedVertices[end];\n    drawLine(buffer, x1, y1, x2, y2); // Draw edge between vertices\n  });\n\n  // Render frame\n  return buffer[coord.y][coord.x] || ' '; // Return character at current position\n};\n","import { Animation } from '../types';\n\nconst density = [' ', '░', '▒', '▓', '█'];\n\nexport const Static: Animation = () => {\n  return density[Math.floor(Math.random() * density.length)];\n};\n","/*\n * This demo was created with the help of ChatGPT 4o\n */\n\nimport { AnimationContext, FrameBuffer, Animation } from '../types';\n\n// Projection constants and rotation speed\nconst FOV = 300; // Field of view for perspective\nconst DISTANCE = 45; // Distance of the cube from the viewer\n\n// Define cube vertices and edges\nconst cubeVertices = [\n  { x: -1, y: -1, z: -1 },\n  { x: 1, y: -1, z: -1 },\n  { x: 1, y: 1, z: -1 },\n  { x: -1, y: 1, z: -1 },\n  { x: -1, y: -1, z: 1 },\n  { x: 1, y: -1, z: 1 },\n  { x: 1, y: 1, z: 1 },\n  { x: -1, y: 1, z: 1 },\n];\n\n// Edges defining cube connections between vertices\nconst edges = [\n  [0, 1],\n  [1, 2],\n  [2, 3],\n  [3, 0], // Back face\n  [4, 5],\n  [5, 6],\n  [6, 7],\n  [7, 4], // Front face\n  [0, 4],\n  [1, 5],\n  [2, 6],\n  [3, 7], // Connecting edges\n];\n\n// Initial rotation angles for the cube\nlet rotationX = 0;\nlet rotationY = 0;\n\n// Track the last cursor position for calculating drag distance\nlet lastCursorX = 0;\nlet lastCursorY = 0;\n\n// Rotate point on X-axis\nconst rotateX = (point: { x: number; y: number; z: number }, angle: number) => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return {\n    x: point.x,\n    y: point.y * cos - point.z * sin,\n    z: point.y * sin + point.z * cos,\n  };\n};\n\n// Rotate point on Y-axis\nconst rotateY = (point: { x: number; y: number; z: number }, angle: number) => {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return {\n    x: point.x * cos + point.z * sin,\n    y: point.y,\n    z: -point.x * sin + point.z * cos,\n  };\n};\n\n// Project 3D points to 2D screen\nconst project = (\n  point: { x: number; y: number; z: number },\n  context: AnimationContext,\n) => {\n  const scale = FOV / (point.z + DISTANCE); // Perspective projection\n  const screenX = Math.round(point.x * scale + context.cols / 2);\n  const screenY = Math.round(point.y * scale + context.rows / 2);\n  return { x: screenX, y: screenY };\n};\n\n// Draw a line between two points using Bresenham's algorithm\nconst drawLine = (\n  buffer: FrameBuffer,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n) => {\n  const dx = Math.abs(x2 - x1);\n  const dy = Math.abs(y2 - y1);\n  const sx = x1 < x2 ? 1 : -1;\n  const sy = y1 < y2 ? 1 : -1;\n  let err = dx - dy;\n\n  while (true) {\n    if (x1 >= 0 && x1 < buffer[0].length && y1 >= 0 && y1 < buffer.length) {\n      buffer[y1][x1] = '*'; // Draw a point on the line\n    }\n    if (x1 === x2 && y1 === y2) break;\n    const e2 = 2 * err;\n    if (e2 > -dy) {\n      err -= dy;\n      x1 += sx;\n    }\n    if (e2 < dx) {\n      err += dx;\n      y1 += sy;\n    }\n  }\n};\n\n// Main function to render the rotating cube\nexport const CubeInput: Animation = (coord, context, buffer, cursor) => {\n  // If the cursor is pressed, update rotation angles based on drag distance\n  if (cursor.pressed) {\n    const dx = cursor.x - lastCursorX;\n    const dy = cursor.y - lastCursorY;\n    rotationX += dy * 0.01; // Scale for smooth rotation\n    rotationY += dx * 0.01;\n  }\n\n  // Update the last cursor position for the next frame\n  lastCursorX = cursor.x;\n  lastCursorY = cursor.y;\n\n  // Rotate and project each vertex\n  const projectedVertices = cubeVertices.map((v) => {\n    const rotatedVertex = rotateX(rotateY(v, rotationY), rotationX);\n    return project(rotatedVertex, context);\n  });\n\n  // Draw each edge on the buffer\n  edges.forEach(([start, end]) => {\n    const { x: x1, y: y1 } = projectedVertices[start];\n    const { x: x2, y: y2 } = projectedVertices[end];\n    drawLine(buffer, x1, y1, x2, y2); // Draw edge between vertices\n  });\n\n  // Render frame\n  return buffer[coord.y][coord.x] || ' '; // Return character at current position\n};\n"],"names":["FOV","DISTANCE","cubeVertices","edges","rotateX","rotateY","project","drawLine"],"mappings":"IAAY;AAAZ,CAAA,UAAY,UAAU,EAAA;AACpB,IAAA,UAAA,CAAA,UAAA,CAAA,KAAA,CAAA,GAAA,CAAA,CAAA,GAAA,KAAO;AACP,IAAA,UAAA,CAAA,UAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAa;AACb,IAAA,UAAA,CAAA,UAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAU;AACV,IAAA,UAAA,CAAA,UAAA,CAAA,YAAA,CAAA,GAAA,CAAA,CAAA,GAAA,YAAc;AACd,IAAA,UAAA,CAAA,UAAA,CAAA,MAAA,CAAA,GAAA,CAAA,CAAA,GAAA,MAAQ;AACR,IAAA,UAAA,CAAA,UAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,GAAA,UAAY;AACZ,IAAA,UAAA,CAAA,UAAA,CAAA,OAAA,CAAA,GAAA,CAAA,CAAA,GAAA,OAAS;AACT,IAAA,UAAA,CAAA,UAAA,CAAA,WAAA,CAAA,GAAA,CAAA,CAAA,GAAA,WAAa;AACb,IAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAW;AACX,IAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,EAAA,CAAA,GAAA,SAAY;AACd,CAAC,EAXW,UAAU,KAAV,UAAU,GAWrB,EAAA,CAAA,CAAA;AAEM,MAAM,IAAI,GAAG,QAAQ;AACrB,MAAM,WAAW,GAAG,IAAI;;ACXxB,MAAM,gBAAgB,GAAG,CAC9B,MAAmB,EACnB,OAAyB,EACzB,MAAqB,KACnB;AACF,IAAA,MAAM,IAAI,GAAG,MAAM,CAAC,qBAAqB,EAAE;IAC3C,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,CAAQ,KAAI;AAClD,QAAA,IAAI,EAAE,CAAC,YAAY,YAAY,CAAC;YAAE;QAClC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI;QAC1B,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG;AAEzB,QAAA,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,SAAS,CAAC;AACrD,QAAA,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC;AACxD,KAAC,CAAC;IAEF,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC,CAAQ,KAAI;AAClD,QAAA,IAAI,EAAE,CAAC,YAAY,YAAY,CAAC;YAAE;AAClC,QAAA,MAAM,CAAC,OAAO,GAAG,IAAI;AACvB,KAAC,CAAC;IAEF,MAAM,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,CAAQ,KAAI;AAChD,QAAA,IAAI,EAAE,CAAC,YAAY,YAAY,CAAC;YAAE;AAClC,QAAA,MAAM,CAAC,OAAO,GAAG,KAAK;AACxB,KAAC,CAAC;AACJ,CAAC;AAEM,MAAM,eAAe,GAAG,CAC7B,MAAmB,EACnB,OAAyB,EACzB,OAAsB,KACpB;AACF,IAAA,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAK;QACrC,MAAM,kBAAkB,GAAG,oBAAoB,CAAC,MAAM,EAAE,OAAO,CAAC,UAAU,CAAC;AAC3E,QAAA,OAAO,CAAC,IAAI,GAAG,kBAAkB,CAAC,IAAI;AACtC,QAAA,OAAO,CAAC,IAAI,GAAG,kBAAkB,CAAC,IAAI;AACtC,QAAA,OAAO,CAAC,SAAS,GAAG,kBAAkB,CAAC,SAAS;AAChD,QAAA,OAAO,CAAC,UAAU,GAAG,kBAAkB,CAAC,UAAU;AAClD,QAAA,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC;AAC/B,KAAC,CAAC;AACJ,CAAC;;AC/BD,MAAM,qBAAqB,GAAG,MAAK;IACjC,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC;AAC3C,IAAA,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO;AAC5B,IAAA,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,WAAW;AACnC,IAAA,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,MAAM;AAC9B,IAAA,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ;AAE9B,IAAA,IAAI,CAAC,SAAS,GAAG,IAAI;AAErB,IAAA,OAAO,IAAI;AACb,CAAC;AAED,MAAM,iBAAiB,GAAG,CAAC,OAAyB,KAAI;AACtD,IAAA,MAAM,EAAE,UAAU,EAAE,GAAG,OAAO;AAE9B,IAAA,MAAM,IAAI,GAAG,qBAAqB,EAAE;IAEpC,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAG,EAAA,UAAU,IAAI;IACrC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAG,EAAA,UAAU,IAAI;IACvC,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAG,EAAA,UAAU,IAAI;AACzC,IAAA,IAAI,CAAC,SAAS,GAAG,IAAI;AAErB,IAAA,OAAO,IAAI;AACb,CAAC;AAEM,MAAM,oBAAoB,GAAG,CAClC,MAAmB,EACnB,UAAsB,KACP;AACf,IAAA,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,KAAK,EAAE,WAAW,EAAE,GAChD,MAAM,CAAC,qBAAqB,EAAE;AAEhC,IAAA,MAAM,MAAM,GAAG,qBAAqB,EAAE;AAEtC,IAAA,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ;AAClC,IAAA,MAAM,CAAC,KAAK,CAAC,OAAO,GAAG,QAAQ;AAC/B,IAAA,MAAM,CAAC,SAAS,GAAG,IAAI;AACvB,IAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC;IAE1B,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,MAAM,CAAC,qBAAqB,EAAE;AAC7D,IAAA,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC;AAE1B,IAAA,MAAM,KAAK,GAAG,UAAU,GAAG,WAAW;IAEtC,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;AACjD,IAAA,MAAM,SAAS,GAAG,UAAU,GAAG,GAAG;IAElC,MAAM,IAAI,GACR,CAAC,YAAY,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACrE,MAAM,IAAI,GAAG,CAAC,WAAW,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC;IAE5E,OAAO;QACL,IAAI;QACJ,IAAI;QACJ,UAAU;QACV,SAAS;KACV;AACH,CAAC;AAED,MAAM,UAAU,GAAG,CACjB,MAAmB,EACnB,OAAyB,KACR;AACjB,IAAA,MAAM,MAAM,GAAkB;AAC5B,QAAA,CAAC,EAAE,CAAC;AACJ,QAAA,CAAC,EAAE,CAAC;AACJ,QAAA,GAAG,EAAE,CAAC;AACN,QAAA,GAAG,EAAE,CAAC;AACN,QAAA,OAAO,EAAE,KAAK;KACf;AAED,IAAA,gBAAgB,CAAC,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC;AAEzC,IAAA,OAAO,MAAM;AACf,CAAC;AAEM,MAAM,YAAY,GAAG,CAC1B,MAAmB,EACnB,OAAyB,KACvB;;AAEF,IAAA,MAAM,CAAC,SAAS,GAAG,EAAE;AAErB,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;QACrC,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;;AAElD,CAAC;AAED,MAAM,WAAW,GAAG,CAAC,MAAmB,EAAE,OAAsB,KAAI;IAClE,MAAM,WAAW,GAAG,oBAAoB,CAAC,MAAM,EAAE,OAAO,CAAC,UAAU,CAAC;AAEpE,IAAA,MAAM,OAAO,GAAqB;QAChC,IAAI,EAAE,WAAW,CAAC,IAAI;QACtB,IAAI,EAAE,WAAW,CAAC,IAAI;QACtB,SAAS,EAAE,WAAW,CAAC,SAAS;QAChC,UAAU,EAAE,WAAW,CAAC,UAAU;AAClC,QAAA,KAAK,EAAE,CAAC;AACR,QAAA,SAAS,EAAE,CAAC;AACZ,QAAA,WAAW,EAAE,CAAC;QACd,OAAO;KACR;AAED,IAAA,eAAe,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;AAEzC,IAAA,OAAO,OAAO;AAChB,CAAC;AAED,MAAM,aAAa,GAAG,CAAC,MAAmB,EAAE,GAAW,KAAI;AACzD,IAAA,OAAO,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAoB;AAChD,CAAC;AAED,MAAM,kBAAkB,GAAG,CACzB,MAAmB,EACnB,OAAyB,EACzB,WAAwB,KACtB;AACF,IAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;QACrC,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,UAAU;YAAE;QAEjB,MAAM,UAAU,GAAa,EAAE;QAC/B,WAAW,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC,KAAI;AACjC,YAAA,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI;AACtB,SAAC,CAAC;QAEF,UAAU,CAAC,SAAS,GAAG,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;;AAE9C,CAAC;AAED,MAAM,gBAAgB,GAAG,CACvB,MAAmB,EACnB,OAAyB,EACzB,SAAoB,EACpB,MAAqB,KACnB;IACF,IAAI,iBAAiB,GAAG,CAAC;IACzB,MAAM,WAAW,GAAgB,EAAE;IAEnC,SAAS,IAAI,CAAC,SAAiB,EAAA;QAC7B,OAAO,CAAC,SAAS,GAAG,CAAC,SAAS,GAAG,iBAAiB,IAAI,IAAI;AAC1D,QAAA,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,SAAS;QACxC,iBAAiB,GAAG,SAAS;AAE7B,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AACrC,YAAA,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,EAAE;AACnB,gBAAA,WAAW,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;;;AAInD,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;AACrC,YAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE;gBACrC,MAAM,MAAM,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AAC7B,gBAAA,MAAM,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,CAAC;gBAE5D,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,GAAG,IAAI;;;QAI3D,kBAAkB,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,GAAG,WAAW,CAAC,CAAC;AACrD,QAAA,WAAW,CAAC,MAAM,GAAG,CAAC;QACtB,OAAO,CAAC,KAAK,EAAE;QAEf,qBAAqB,CAAC,IAAI,CAAC;;IAE7B,qBAAqB,CAAC,IAAI,CAAC;AAC7B,CAAC;MAEY,MAAM,GAAG,CACpB,MAA0B,EAC1B,SAAoB,EACpB,OAAyB,GAAA;IACvB,UAAU,EAAE,UAAU,CAAC,OAAO;AAC/B,CAAA,KACO;AACR,IAAA,IAAI,CAAC,MAAM;AAAE,QAAA,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC;IAE7D,MAAM,OAAO,GAAG,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC;AAE5C,IAAA,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC;IAC7B,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,EAAE,OAAO,CAAC;IAE1C,gBAAgB,CAAC,MAAM,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,CAAC;AACtD;;ACjMA;;AAEG;AAIH;AACA,MAAMA,KAAG,GAAG,GAAG,CAAC;AAChB,MAAMC,UAAQ,GAAG,EAAE,CAAC;AAEpB;AACA,MAAMC,cAAY,GAAG;AACnB,IAAA,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;AACvB,IAAA,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;AACtB,IAAA,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;AACrB,IAAA,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;AACtB,IAAA,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACtB,IAAA,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACrB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACpB,IAAA,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;CACtB;AAED;AACA,MAAMC,OAAK,GAAG;IACZ,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;AACN,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;AACN,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;AACN,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC;CACP;AAED;AACA,MAAMC,SAAO,GAAG,CAAC,KAA0C,EAAE,KAAa,KAAI;IAC5E,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAC3B,OAAO;QACL,CAAC,EAAE,KAAK,CAAC,CAAC;QACV,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG;QAChC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG;KACjC;AACH,CAAC;AAED;AACA,MAAMC,SAAO,GAAG,CAAC,KAA0C,EAAE,KAAa,KAAI;IAC5E,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAC3B,OAAO;QACL,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG;QAChC,CAAC,EAAE,KAAK,CAAC,CAAC;AACV,QAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG;KAClC;AACH,CAAC;AAED;AACA,MAAMC,SAAO,GAAG,CACd,KAA0C,EAC1C,OAAyB,KACvB;AACF,IAAA,MAAM,KAAK,GAAGN,KAAG,IAAI,KAAK,CAAC,CAAC,GAAGC,UAAQ,CAAC,CAAC;AACzC,IAAA,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;AAC9D,IAAA,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;IAC9D,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE;AACnC,CAAC;AAED;AACA,MAAMM,UAAQ,GAAG,CACf,MAAmB,EACnB,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,KACR;IACF,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;IAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;AAC5B,IAAA,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3B,IAAA,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3B,IAAA,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE;IAEjB,OAAO,IAAI,EAAE;QACX,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE;YACrE,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;AAEvB,QAAA,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;YAAE;AAC5B,QAAA,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG;AAClB,QAAA,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE;YACZ,GAAG,IAAI,EAAE;YACT,EAAE,IAAI,EAAE;;AAEV,QAAA,IAAI,EAAE,GAAG,EAAE,EAAE;YACX,GAAG,IAAI,EAAE;YACT,EAAE,IAAI,EAAE;;;AAGd,CAAC;AAED;AACO,MAAM,IAAI,GAAc,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,KAAI;;AAE3D,IAAA,MAAM,KAAK,GAAG,OAAO,CAAC,WAAW,GAAG,GAAG;;IAGvC,MAAM,iBAAiB,GAAGL,cAAY,CAAC,GAAG,CAAC,CAAC,CAAC,KAAI;AAC/C,QAAA,MAAM,aAAa,GAAGE,SAAO,CAACC,SAAO,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;AACxD,QAAA,OAAOC,SAAO,CAAC,aAAa,EAAE,OAAO,CAAC;AACxC,KAAC,CAAC;;IAGFH,OAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,KAAI;AAC7B,QAAA,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,iBAAiB,CAAC,KAAK,CAAC;AACjD,QAAA,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,iBAAiB,CAAC,GAAG,CAAC;AAC/C,QAAAI,UAAQ,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACnC,KAAC,CAAC;;AAGF,IAAA,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;AACzC;;ACxHA,MAAM,OAAO,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AAElC,MAAM,MAAM,GAAc,MAAK;AACpC,IAAA,OAAO,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC5D;;ACNA;;AAEG;AAIH;AACA,MAAM,GAAG,GAAG,GAAG,CAAC;AAChB,MAAM,QAAQ,GAAG,EAAE,CAAC;AAEpB;AACA,MAAM,YAAY,GAAG;AACnB,IAAA,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;AACvB,IAAA,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;AACtB,IAAA,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;AACrB,IAAA,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE;AACtB,IAAA,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACtB,IAAA,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACrB,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;AACpB,IAAA,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;CACtB;AAED;AACA,MAAM,KAAK,GAAG;IACZ,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;AACN,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;AACN,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;IACN,CAAC,CAAC,EAAE,CAAC,CAAC;AACN,IAAA,CAAC,CAAC,EAAE,CAAC,CAAC;CACP;AAED;AACA,IAAI,SAAS,GAAG,CAAC;AACjB,IAAI,SAAS,GAAG,CAAC;AAEjB;AACA,IAAI,WAAW,GAAG,CAAC;AACnB,IAAI,WAAW,GAAG,CAAC;AAEnB;AACA,MAAM,OAAO,GAAG,CAAC,KAA0C,EAAE,KAAa,KAAI;IAC5E,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAC3B,OAAO;QACL,CAAC,EAAE,KAAK,CAAC,CAAC;QACV,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG;QAChC,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG;KACjC;AACH,CAAC;AAED;AACA,MAAM,OAAO,GAAG,CAAC,KAA0C,EAAE,KAAa,KAAI;IAC5E,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC;IAC3B,OAAO;QACL,CAAC,EAAE,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG;QAChC,CAAC,EAAE,KAAK,CAAC,CAAC;AACV,QAAA,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC,GAAG,GAAG;KAClC;AACH,CAAC;AAED;AACA,MAAM,OAAO,GAAG,CACd,KAA0C,EAC1C,OAAyB,KACvB;AACF,IAAA,MAAM,KAAK,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC;AACzC,IAAA,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;AAC9D,IAAA,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,CAAC;IAC9D,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE;AACnC,CAAC;AAED;AACA,MAAM,QAAQ,GAAG,CACf,MAAmB,EACnB,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,KACR;IACF,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;IAC5B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,EAAE,CAAC;AAC5B,IAAA,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3B,IAAA,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;AAC3B,IAAA,IAAI,GAAG,GAAG,EAAE,GAAG,EAAE;IAEjB,OAAO,IAAI,EAAE;QACX,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE;YACrE,MAAM,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC;;AAEvB,QAAA,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE;YAAE;AAC5B,QAAA,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG;AAClB,QAAA,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE;YACZ,GAAG,IAAI,EAAE;YACT,EAAE,IAAI,EAAE;;AAEV,QAAA,IAAI,EAAE,GAAG,EAAE,EAAE;YACX,GAAG,IAAI,EAAE;YACT,EAAE,IAAI,EAAE;;;AAGd,CAAC;AAED;AACO,MAAM,SAAS,GAAc,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,KAAI;;AAErE,IAAA,IAAI,MAAM,CAAC,OAAO,EAAE;AAClB,QAAA,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,WAAW;AACjC,QAAA,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,GAAG,WAAW;AACjC,QAAA,SAAS,IAAI,EAAE,GAAG,IAAI,CAAC;AACvB,QAAA,SAAS,IAAI,EAAE,GAAG,IAAI;;;AAIxB,IAAA,WAAW,GAAG,MAAM,CAAC,CAAC;AACtB,IAAA,WAAW,GAAG,MAAM,CAAC,CAAC;;IAGtB,MAAM,iBAAiB,GAAG,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,KAAI;AAC/C,QAAA,MAAM,aAAa,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,SAAS,CAAC;AAC/D,QAAA,OAAO,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC;AACxC,KAAC,CAAC;;IAGF,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,KAAI;AAC7B,QAAA,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,iBAAiB,CAAC,KAAK,CAAC;AACjD,QAAA,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,GAAG,iBAAiB,CAAC,GAAG,CAAC;AAC/C,QAAA,QAAQ,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;AACnC,KAAC,CAAC;;AAGF,IAAA,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC;AACzC;;;;"}